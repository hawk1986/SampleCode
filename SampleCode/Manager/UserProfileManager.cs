#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 09/25/2017 13:04:27
//     Runtime Version: 4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using SampleCode.Interface;
using SampleCode.Models;
using SampleCode.ViewModel;
using SampleCode.ViewModel.ListResult;
using SampleCode.ViewModel.SearchModel;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using Utilities.Extensions;

namespace SampleCode.Manager
{
    public class UserProfileManager : IUserProfileManager
    {
        readonly IUserProfileRepository _userProfileRepository;

        public UserProfileManager(IUserProfileRepository userProfileRepository)
        {
            _userProfileRepository = userProfileRepository;
        }

        /// <summary>
        /// 檢查 Code 是否已經被使用
        /// </summary>
        /// <param name="code"></param>
        /// <returns></returns>
        public bool CodeBeUse(string code)
        {
            code = code.Trim().ToLower();
            var result = _userProfileRepository.Any(x => x.Code.ToLower() == code);

            return result;
        }

        /// <summary>
        /// 建立 UserProfile
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public void Create(UserProfileViewModel entity)
        {
            var item = (UserProfile)entity;

            using (var transaction = _userProfileRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    _userProfileRepository.Create(item);
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 刪除 UserProfile
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public void Delete(List<Guid> id)
        {
            using (var transaction = _userProfileRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var itemSet = _userProfileRepository.Where(x => id.Contains(x.ID)).ToList();
                    if (itemSet.Any())
                    {
                        foreach (var item in itemSet)
                        {
                            _userProfileRepository.Delete(item);
                        }
                    }
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 取得 UserProfile
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public UserProfileViewModel GetByID(Guid id)
        {
            var item = _userProfileRepository.GetByID(id);
            var result = (UserProfileViewModel)item;

            return result;
        }

        /// <summary>
        /// 根據 id 取得 UserProfile
        /// </summary>
        /// <param name="userId"></param>
        /// <param name="functionName"></param>
        /// <returns></returns>
        public UserProfileViewModel GetByUserIDAndFunction(Guid userId, string functionName)
        {
            var profile = _userProfileRepository.FirstOrDefault(x => x.UserID == userId && x.Code == functionName);

            return (UserProfileViewModel)profile;
        }

        /// <summary>
        /// 分頁
        /// </summary>
        /// <param name="searchModel"></param>
        /// <returns></returns>
        public Paging<UserProfileListResult> Paging(UserProfileSearchModel searchModel)
        {
            // 預設集合
            var temp = _userProfileRepository.GetAll();

            // 將 DB 資料轉換為列表頁呈現資料
            var tempResult = from x in temp
                             select new UserProfileListResult
                             {
                                 SequenceNo = x.SequenceNo,
                                 ID = x.ID,
                                 UserName = x.User.Name,
                                 Code = x.Code,
                                 ListOption = x.ListOption,
                             };

            // 如有篩選條件，進行篩選
            if (!string.IsNullOrWhiteSpace(searchModel.Search))
            {
                var search = searchModel.Search.ToLower();
                tempResult = tempResult.Where(x =>
                    x.UserName.Contains(search) ||
                    x.Code.Contains(search) ||
                    x.ListOption.Contains(search) ||
                    false);
            }

            // 進行分頁處理
            var result = new Paging<UserProfileListResult>();
            result.total = tempResult.Count();
            result.rows = tempResult
                .OrderBy(searchModel.Sort, searchModel.Order)
                .Skip(searchModel.Offset)
                .Take(searchModel.Limit)
                .ToList();

            return result;
        }

        /// <summary>
        /// Create/Edit profile
        /// </summary>
        /// <param name="entity"></param>
        public void Save(UserProfileViewModel entity)
        {
            var profile = _userProfileRepository.FirstOrDefault(x => x.UserID == entity.UserID && x.Code == entity.Code);
            if (null == profile)
            {
                Create(entity);
            }
            else
            {
                using (var transaction = _userProfileRepository.dbContext.Database.BeginTransaction())
                {
                    try
                    {
                        var listOption = JsonConvert.SerializeObject(entity.ListOption);
                        profile.ListOption = string.IsNullOrEmpty(listOption) ? "{}" : listOption;
                        _userProfileRepository.Update(profile);
                        transaction.Commit();
                    }
                    catch
                    {
                        transaction.Rollback();
                        throw;
                    }
                }
            }
        }

        /// <summary>
        /// 更新 UserProfile
        /// </summary>
        /// <param name="entity"></param>
        public void Update(UserProfileViewModel entity)
        {
            using (var transaction = _userProfileRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var listOption = JsonConvert.SerializeObject(entity.ListOption);

                    var source = _userProfileRepository.GetByID(entity.ID);
                    source.UserID = entity.UserID;
                    source.Code = entity.Code ?? string.Empty;
                    source.ListOption = string.IsNullOrEmpty(listOption) ? "{}" : listOption;

                    _userProfileRepository.Update(source);
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }
    }
}
#pragma warning restore 1591