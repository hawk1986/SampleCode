#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 09/25/2017 13:04:27
//     Runtime Version: 4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using SampleCode.Interface;
using SampleCode.Models;
using SampleCode.ViewModel;
using SampleCode.ViewModel.ListResult;
using SampleCode.ViewModel.SearchModel;
using ResourceLibrary;
using System;
using System.Collections.Generic;
using System.Linq;
using Utilities.Extensions;

namespace SampleCode.Manager
{
    public class ModuleManager : IModuleManager
    {
        readonly IModuleRepository _moduleRepository;

        public ModuleManager(IModuleRepository moduleRepository)
        {
            _moduleRepository = moduleRepository;
        }

        /// <summary>
        /// 建立 Module
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public void Create(ModuleViewModel entity)
        {
            var item = (Module)entity;

            using (var transaction = _moduleRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    _moduleRepository.Create(item);
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 刪除 Module
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public void Delete(List<Guid> id)
        {
            using (var transaction = _moduleRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var itemSet = _moduleRepository.Where(x => id.Contains(x.ID)).ToList();
                    if (itemSet.Any())
                    {
                        foreach (var item in itemSet)
                        {
                            _moduleRepository.Delete(item);
                        }
                    }
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 取得 Module
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public ModuleViewModel GetByID(Guid id)
        {
            var item = _moduleRepository.GetByID(id);
            var result = (ModuleViewModel)item;

            return result;
        }

        /// <summary>
        /// 取得目前最大的順序序號
        /// </summary>
        /// <returns></returns>
        public byte GetSequence()
        {
            byte result = 0;
            if (_moduleRepository.Any())
            {
                result = _moduleRepository.GetAll().Max(x => x.Sequence);
            }

            return ++result;
        }

        /// <summary>
        /// 分頁
        /// </summary>
        /// <param name="searchModel"></param>
        /// <returns></returns>
        public Paging<ModuleListResult> Paging(ModuleSearchModel searchModel)
        {
            // 預設集合
            var temp = _moduleRepository.GetAll();

            if (searchModel.IsEnable.HasValue)
            {
                temp = temp.Where(x => x.IsEnable == searchModel.IsEnable.Value);
            }

            // 將 DB 資料轉換為列表頁呈現資料
            var tempResult = from x in temp
                             select new ModuleListResult
                             {
                                 SequenceNo = x.SequenceNo,
                                 ID = x.ID,
                                 Sequence = x.Sequence,
                                 Name = x.Name,
                                 IsEnable = x.IsEnable,
                                 MenuDisplay = x.MenuDisplay,
                             };

            // 如有篩選條件，進行篩選
            if (!string.IsNullOrWhiteSpace(searchModel.Search))
            {
                var search = searchModel.Search.ToLower();
                tempResult = tempResult.Where(x =>
                    x.Name.Contains(search) ||
                    false);
            }

            // 進行分頁處理
            var result = new Paging<ModuleListResult>();
            result.total = tempResult.Count();
            result.rows = tempResult
                .OrderBy(searchModel.Sort, searchModel.Order)
                .Skip(searchModel.Offset)
                .Take(searchModel.Limit)
                .ToList();
            foreach (var item in result.rows)
            {
                item.Name = LanguageTool.GetResourceValue(item.Name);
            }

            return result;
        }

        /// <summary>
        /// 更新 Module
        /// </summary>
        /// <param name="entity"></param>
        public void Update(ModuleViewModel entity)
        {
            using (var transaction = _moduleRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var source = _moduleRepository.GetByID(entity.ID);
                    source.Sequence = entity.Sequence;
                    source.Name = entity.Name ?? string.Empty;
                    source.MenuIcon = entity.MenuIcon ?? string.Empty;
                    source.IsEnable = entity.IsEnable;
                    source.MenuDisplay = entity.MenuDisplay;

                    _moduleRepository.Update(source);
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }
    }
}
#pragma warning restore 1591