#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 06/05/2020 16:12:52
//	   Runtime Version: 4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Newtonsoft.Json;
using ResourceLibrary;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Mvc;

namespace SampleCode.ViewModel
{
    public class FileAttachedBaseModel
    {
        public FileAttachedBaseModel()
        {
        }

        #region == DB Fields ==

        /// <summary>
        /// SequenceNo
        /// </summary>
        public int SequenceNo { get; set; }

        /// <summary>
        /// ID
        /// </summary>
        public Guid ID { get; set; }

        /// <summary>
        /// ParentID
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "Parent", ResourceType = typeof(Resource))]
        public Guid ParentID { get; set; }

        /// <summary>
        /// TableType
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [StringLength(20, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "TableType", ResourceType = typeof(Resource))]
        public string TableType { get; set; }

        /// <summary>
        /// ItemType
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [StringLength(20, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "ItemType", ResourceType = typeof(Resource))]
        public string ItemType { get; set; }

        /// <summary>
        /// FileName
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [StringLength(50, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "FileName", ResourceType = typeof(Resource))]
        public string FileName { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        [DataType(DataType.MultilineText)]
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [StringLength(100, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "Description", ResourceType = typeof(Resource))]
        public string Description { get; set; }

        /// <summary>
        /// FileExtension
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [StringLength(10, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "FileExtension", ResourceType = typeof(Resource))]
        public string FileExtension { get; set; }

        /// <summary>
        /// FilePath
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [StringLength(128, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "FilePath", ResourceType = typeof(Resource))]
        public string FilePath { get; set; }

        /// <summary>
        /// FileSize
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "FileSize", ResourceType = typeof(Resource))]
        public int FileSize { get; set; }

        /// <summary>
        /// IsImageFile
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "IsImageFile", ResourceType = typeof(Resource))]
        public bool IsImageFile { get; set; }

        /// <summary>
        /// IsThumbImage
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "IsThumbImage", ResourceType = typeof(Resource))]
        public bool IsThumbImage { get; set; }

        /// <summary>
        /// DownloadCount
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "DownloadCount", ResourceType = typeof(Resource))]
        public int DownloadCount { get; set; }

        /// <summary>
        /// IsThumbImage
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "MainPic", ResourceType = typeof(Resource))]
        public bool MainPic { get; set; }

        /// <summary>
        /// PicOrder 
        /// </summary>        
        [Display(Name = "Order", ResourceType = typeof(Resource))]
        public int? PicOrder { get; set; }

        /// <summary>
        /// AreaKind 
        /// </summary>        
        [Display(Name = "AreaKind", ResourceType = typeof(Resource))]
        public string AreaKind { get; set; }

        /// <summary>
        /// CounterType
        /// </summary>
        [Display(Name = "CounterType", ResourceType = typeof(Resource))]
        public string CounterType { get; set; }

        /// <summary>
        /// Building
        /// </summary>
        [Display(Name = "Building", ResourceType = typeof(Resource))]
        [JsonIgnore]
        public string Building { get; set; }

        /// <summary>
        /// Floor
        /// </summary>
        [Display(Name = "Floor", ResourceType = typeof(Resource))]
        [JsonIgnore]
        public string Floor { get; set; }

        /// <summary>
        /// Brand
        /// </summary>
        [Display(Name = "Brand", ResourceType = typeof(Resource))]
        [JsonIgnore]
        public string Brand { get; set; }

        /// <summary>
        /// ActiveDate
        /// </summary>
        [Display(Name = "ActiveDate", ResourceType = typeof(Resource))]
        [DisplayFormat(DataFormatString = "{0:yyyy/MM/dd}", ApplyFormatInEditMode = true)]
        public DateTime? ActiveDate { get; set; }

        /// <summary>
        /// ActiveTime
        /// </summary>
        [Display(Name = "ActiveTime", ResourceType = typeof(Resource))]        
        public TimeSpan? ActiveTime { get; set; }

        /// <summary>
        /// CreateTime
        /// </summary>
        [Display(Name = "CreateTime", ResourceType = typeof(Resource))]
        [DisplayFormat(DataFormatString = "{0:yyyy/MM/dd HH:mm:ss}", ApplyFormatInEditMode = true)]
        public DateTime CreateTime { get; set; }

        #endregion == DB Fields ==
    }

    public class FileAttachedViewModel : FileAttachedBaseModel
    {
        #region == View Fields ==

        /// <summary>
        /// ParentList
        /// </summary>
        public SelectList ParentList { get; set; }
        public string BuildingName { get; set; }
        public string FloorName { get; set; }
        public string BrandName { get; set; }
        public double XAxis { get; set; }
        public double YAxis { get; set; }
        public double XProportion { get; set; }
        public double YProportion { get; set; }
        #endregion == View Fields ==
    }
}
#pragma warning restore 1591