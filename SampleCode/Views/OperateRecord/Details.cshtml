@model OperateRecordViewModel
@{
    var auth = UnobtrusiveSession.Session["Auth"] as IList<Auth>;
    var action = ViewContext.RouteData.Values["action"] as string;
    var function = auth.First(x => x.Code == "OperateRecord" + action);
    var edit = auth.Any(x => x.Code == "OperateRecordEdit");
    ViewBag.Title = function.ModuleName + " / " + function.GroupName + " / " + function.SimpleName;
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-12">
        <ol class="breadcrumb">
            <li>
                <a href="#">@function.ModuleName</a>
            </li>
            <li>
                @Html.ActionLink(function.GroupName, "Index")
            </li>
            <li class="active">
                <strong>@function.SimpleName</strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated">
    <div class="row">
        <div class="col-sm-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <div class="form-horizontal" role="form">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RecordID, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.RecordID, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TableName, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.TableName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.RecordInfo, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.RecordInfo, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.Action, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Result, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.Result, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OperateIP, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.OperateIP, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OperateUser, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.OperateUser, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OperateTime, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.OperateTime, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                @if (edit)
                                {
                                    <a id="edit_btn" href="@Url.Action("Edit", "OperateRecord", new { id = Model.ID })" class="btn btn-success"><i class="fa fa-pencil"></i> @Resource.Edit</a>
                                }
                                <a id="exit_btn" href="@Url.Action("Index")" class="btn btn-danger"><i class="fa fa-sign-out"></i> @Resource.Exit</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
