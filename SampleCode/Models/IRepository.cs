
#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Linq.Expressions;

namespace SampleCode.Models
{
    public interface IRepositoryBase { }

    public interface IRepository<T> : IRepositoryBase where T : class
    {
        DbContext dbContext { get; set; }

        /// <summary>
        /// 新增日誌
        /// </summary>
        /// <param name="id"></param>
        /// <param name="table"></param>
        /// <param name="name"></param>
        /// <param name="action"></param>
        /// <param name="result"></param>
        /// <param name="user"></param>
        void CreateLog(Guid id, string table, string name, char action, char result, string user);

        /// <summary>
        /// 檢查是否存在任何物件
        /// </summary>
        /// <returns></returns>
        bool Any();

        /// <summary>
        /// 檢查是否存在任何符合條件的物件
        /// </summary>
        /// <param name="predicate"></param>
        /// <returns></returns>
        bool Any(Expression<Func<T, bool>> predicate);

        /// <summary>
        /// 批次建立 T
        /// </summary>
        /// <param name="entitySet"></param>
        void Create(List<T> entitySet);

        /// <summary>
        /// 建立 T
        /// </summary>
        /// <param name="entity"></param>
        void Create(T entity);

        /// <summary>
        /// 依條件刪除 T
        /// </summary>
        /// <param name="predicate"></param>
        void Delete(Expression<Func<T, bool>> predicate);

        /// <summary>
        /// 刪除 T
        /// </summary>
        /// <param name="entity"></param>
        void Delete(T entity);

        /// <summary>
        /// 回傳第一筆
        /// </summary>
        /// <returns></returns>
        T FirstOrDefault();

        /// <summary>
        /// 回傳符合條件的第一筆
        /// </summary>
        /// <param name="predicate"></param>
        /// <returns></returns>
        T FirstOrDefault(Expression<Func<T, bool>> predicate);

        /// <summary>
        /// 取得全部的 T
        /// </summary>
        /// <returns></returns>
        IQueryable<T> GetAll();

        /// <summary>
        /// 根據 ID 尋找 T
        /// </summary>
        /// <param name="keyValues"></param>
        /// <returns></returns>
        T GetByID(params object[] keyValues);

        /// <summary>
        /// 更新 T
        /// </summary>
        /// <param name="entity"></param>
        void Update(T entity);

        /// <summary>
        /// 更新 T
        /// </summary>
        /// <param name="entity"></param>
        /// <param name="includeProperties"></param>
        void Update(T entity, params Expression<Func<T, object>>[] includeProperties);

        /// <summary>
        /// 根據條件尋找 T
        /// </summary>
        /// <param name="predicate"></param>
        /// <returns></returns>
        IQueryable<T> Where(Expression<Func<T, bool>> predicate);
    }
}
#pragma warning restore 1591
